---
// Page Layout used for pages with sidebars and other complex navigation
import Banner from '../components/Banner.astro';
import Sidebar from '../components/Sidebar.astro';
import Tabs from '../components/Tabs.astro';
import base_url from '../lib/base_url';
import { type ChildNavigationItem, getTrimmedPathname, navigation, type NavigationItem } from '../lib/navigation';
import BaseLayout from './BaseLayout.astro';

interface Props {
	title: string;
}

const { title } = Astro.props;

const getTrimmedPath = (path: string): string => path.replaceAll("/", "");

const currentPath = getTrimmedPath(Astro.url.pathname);

const isActive = (item: NavigationItem | ChildNavigationItem): boolean => {
  if (item.isExternal) return false;
  const trimmedPath = getTrimmedPath(base_url(item.url));
  return currentPath.startsWith(trimmedPath);
}

// const isActiveSubpath = (item: ChildNavigationItem): boolean => {
//   if (item.isExternal) return false;
//   const trimmedPath = getTrimmedPath(base_url(item.url));
//   return currentPath === trimmedPath;
// }

const activeSection: NavigationItem | undefined = navigation.find(section => isActive(section));
// const activePage: ChildNavigationItem | undefined = activeSection?.pages.find(page => isActive(page));
// const activeSubpage: ChildNavigationItem | undefined = activePage?.pages?.find(subpage => isActiveSubpath(subpage));

---
<BaseLayout title={title}>
  <Banner>
    <slot name="banner" title="banner"/>
  </Banner>
  <div class="page-content container-xl min-h-screen">
    <div class="row gx-5">
      <aside class="col-lg-3">
        {activeSection && <Sidebar items={activeSection.pages}/>}
      </aside>
      <main class="col-lg-9">
        <slot/>
      </main>
    </div>
  </div>
  <slot name="footer" title="footer"/>
</BaseLayout>

<style>
  .page-content {
    margin-top: 2rem;
    margin-bottom: 6rem;
  }
  aside {
    display: block;
  }
</style>