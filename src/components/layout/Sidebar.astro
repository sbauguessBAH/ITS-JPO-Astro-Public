---
import type { ChildNavigationItem } from '@/src/types';
import base_url from '@/src/lib/base_url';
import { comparePathname, findNavigationItem } from '@/src/lib/navigation';
import { getTrimmedPathname } from '@/src/lib/navigation';

interface Props {
  items: ChildNavigationItem[];
}

const { items } = Astro.props;

const path = Astro.url.pathname;
// const currentItem = findNavigationItem(currentPath);
---

<style>
  ul {
    padding: 0;
  }

  li {
    list-style: none;
  }

  .sidebar {
    margin-bottom: 2rem;
  }

  .sidebar-child:first-of-type {
    border-top: 1px solid rgba(0,0,0,0.125);
  }

  .sidebar-list-item {
    border-bottom: 1px solid rgba(0,0,0,0.125);
  }

  .sidebar-link {
    text-decoration: none;
    font-weight: 600;
    font-size: 1rem;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: 0.5rem;
    text-wrap: pretty;
  }

  .sidebar-link:hover, 
  .sidebar-list-item .active {
    background-color: #f7f7f7;
  }

  .sidebar-child .sidebar-link {
    padding-left: 2rem;
    background-color: #f0f0f0;
  }

  .sidebar-child .sidebar-link:hover, 
  .sidebar-child .active {
    background-color: #e8e8e8;
    text-decoration: underline;
  }

  .sidebar-list-item .disabled, 
  .sidebar-list-item:hover .disabled,
  .sidebar-child .disabled
  .sidebar-child:hover .disabled {
    color: #515151;
    text-decoration: none;
    cursor: default;
  }

  .sidebar-icon {
    font-size: 0.8rem;
  }

  .sidebar-toggle {
    margin-bottom:0.5rem;
    width: 100%;
    min-height: 3rem;
    /* background-color: rgb(255,255,255,.25);
    border: 1px solid rgba(0, 0, 0, 0.15);
    border-radius: 6px; */
    background-image: linear-gradient(to right, #0A1E62, #09638C );
    border: 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding-left: 0.5rem;
    padding-right: 0.5rem;
    color: white;
    font-weight: 600;
    font-size: 1rem;
    text-transform: uppercase;
  }

  .sidebar-toggle-icon {
    font-size: 1.5rem;
  }

  /* .sidebar-toggle > .sidebar-toggle-icon {
    width: 1.5em;
    height: 1.5em;
    background-repeat: no-repeat;
    background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 384 512'><path fill='white' d='M376.6 84.5c11.3-13.6 9.5-33.8-4.1-45.1s-33.8-9.5-45.1 4.1L192 206 56.6 43.5C45.3 29.9 25.1 28.1 11.5 39.4S-3.9 70.9 7.4 84.5L150.3 256 7.4 427.5c-11.3 13.6-9.5 33.8 4.1 45.1s33.8 9.5 45.1-4.1L192 306 327.4 468.5c11.3 13.6 31.5 15.4 45.1 4.1s15.4-31.5 4.1-45.1L233.7 256 376.6 84.5z'/></svg>")
  }

  .sidebar-toggle.collapsed > .sidebar-toggle-icon {
    width: 1.5em;
    height: 1.5em;
    background-repeat: no-repeat;
    background-image: url("data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 448 512'><path fill='white' d='M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z'/></svg>");
  } */
  
</style>

<nav class="sidebar">
  <button
    class="sidebar-toggle d-flex d-lg-none"
    type="button"
    data-toggle="collapse"
    data-target="#sidebar"
    aria-expanded="false"
    aria-controls="sidebar"
    aria-label="Toggle sidebar navigation"
  >
    In this section <i class="sidebar-toggle-icon fa-solid fa-plus"></i>
  </button>
  <ul class="collapse d-lg-block" id="sidebar">
    {items.map((item) => {
      const trimmedPath = item.url.replaceAll("/", "");
      const showCollapsedItems = item.pages !== undefined && getTrimmedPathname(path).startsWith(item.url);
      // console.log(showCollapsedItems); Removed but can be useful for future troubleshooting 
      return (
        <li class="sidebar-list-item">
          {item.pages ? (
            <a 
              class="sidebar-link" 
              data-bs-toggle="collapse" 
              href={`#collapse${trimmedPath}`} 
              role="button" 
              aria-controls={`collapse${trimmedPath}`}
              aria-expanded={showCollapsedItems ? "true" : "false"}
              aria-label={`Toggle sidebar links for ${item.name}`}
            >
              {item.name}
              <span class="fa fa-angle-down sidebar-icon"></span>
            </a>
            <ul 
              class:list={[
                "collapse sidebar-child", 
                {"show": showCollapsedItems}
              ]} 
              id={`collapse${trimmedPath}`}
            >
              {item.pages.map(childItem => (
                <li class="sidebar-list-item">
                  <a 
                    class:list={[
                      "sidebar-link", 
                      {"active": comparePathname(path, childItem.url)},
                      {"disabled": childItem.isDisabled}
                    ]} 
                    href={
                      childItem.isDisabled
                        ? "#"
                        : childItem.isExternal 
                          ? childItem.url 
                          : base_url(childItem.url)
                    }
                  >
                    {childItem.name}
                  </a>
                </li>
              ))}
            </ul>
          ) : (
            <a 
              class:list={[
                "sidebar-link", 
                {"active": comparePathname(path, item.url)},
                {"disabled": item.isDisabled}
              ]} 
              href={
                item.isDisabled
                  ? "#"
                  : item.isExternal 
                    ? item.url 
                    : base_url(item.url)
              }
              aria-disabled={item.isDisabled}
            >
              {item.name}
              {item.isExternal && <span class="fa fa-arrow-up-right-from-square sidebar-icon"></span>}
            </a>
          )}
        </li>
      )
    })}
  </ul>
</nav>