---
import { getEntry } from "astro:content";
import Link from "../Link.astro";

const standards = await getEntry("standards", "v2x");

interface Props {
  code: string
}

const { code } = Astro.props

const standard = standards.data.find(standard => standard.code === code);
console.log(code, standard?.title)
---
<style>
.custom-tooltip {
  --bs-tooltip-font-size: 0.5rem;
}
</style>

{standard && standard.url ? (
  <Link 
    href={standard.url} 
    data-bs-toggle="tooltip" 
    data-bs-title={standard.title} 
    data-bs-custom-class="custom-tooltip"
    aria-label={`External link to ${standard.code} (${standard.title})`}
    isExternal
  >
    {code}
  </Link>
) : code}

<script>
  // import Tooltip from "bootstrap/js/dist/tooltip";

  // const selectedTooltip = document.querySelector('[data-bs-toggle="tooltip"]')
  // if (selectedTooltip) {
  //   /* eslint-disable-next-line  no-unused-vars*/ // only required if using es-lint
  //   const tooltip = new Tooltip(selectedTooltip);
  // }
  import Tooltip from 'bootstrap/js/dist/tooltip';
  const tooltipTriggerList = document.querySelectorAll(
    '[data-bs-toggle="tooltip"]',
  );
  /* eslint-disable-next-line  no-unused-vars*/ // only required if using es-lint
  const tooltipList = [...tooltipTriggerList].map(
    (tooltipTriggerEl) => new Tooltip(tooltipTriggerEl),
  );
</script>