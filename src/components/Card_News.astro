---
import { type CollectionEntry } from "astro:content";
import base_url from "../lib/base_url";

type Props = {
  post: CollectionEntry<"posts">;
};

const { post } = Astro.props;
const { title, date, image } = post.data;

const markdownString = post.body.slice(0, 600);

// Define a function to remove Markdown syntax
function removeMarkdownSyntax(str: String) {
  return str
    .replace(/\*\*([^*]+)\*\*/g, "$1") // bold
    .replace(/\*([^*]+)\*/g, "$1") // italic
    .replace(/__([^_]+)__/g, "$1") // double underscore bold
    .replace(/_([^_]+)_/g, "$1") // single underscore italic
    .replace(/`([^`]+)`/g, "$1") // inline code
    .replace(/!\[([^\]]*)\]\([^\)]+\)/g, "") // image
    .replace(/\[([^\]]+)\]\([^\)]+\)/g, "$1") // link
    .replace(/^#+\s*(.*)/gm, "") // headers
    .replace(/^> /gm, "") // blockquotes
    .replace(/^- /gm, "") // unordered lists
    .replace(/^(\d+)\. /gm, ""); // ordered lists
}

const preview = removeMarkdownSyntax(markdownString);
---

<style>
  time {
    font-size: small;
  }
  .btn {
    background-color: #09638c;
  }
  .btn:hover {
    background-color: #009ad6;
  }
  h2 {
    text-wrap: balance;
  }
  p {
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 3; /* Number of lines to show */
    overflow: hidden;
  }
</style>

<div>
  <time datetime={date.toISOString()}>
    {date.toLocaleDateString(undefined, { dateStyle: "medium", timeZone: "UTC" })}
  </time><br />
  <h2>{title}</h2>
  <p>{preview}</p>
  <a href={base_url(`/news-info/news/${post.slug}`)} class="btn">Read Post</a>
</div>
