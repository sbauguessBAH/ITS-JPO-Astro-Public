---
import base_url from '@/src/lib/base_url'
import type { ImageMetadata } from 'astro'
import { Image } from "astro:assets";

export type OverlayResourceColor = "blue" | "green" | "orange" | "purple"

export interface OverlayResource {
  name: string
  description: string
  path: string
  background: ImageMetadata
  alt: string
  icon?: ImageMetadata
  color: OverlayResourceColor
  isExternalLink?: boolean
}

interface Props extends OverlayResource {}

const { ...props } = Astro.props
---

<style>
  .overlay-card {
    position: relative;
    border-radius: var(--radius-md);
    text-decoration: none;
    box-shadow: var(--box-shadow)
  }

  .overlay-card:hover {
    font-weight: inherit;
    text-decoration: none;
    box-shadow: var(--box-shadow-lg)
  }
  
  .overlay-card-image {
    width: 100%;
    height: 100%;
    position: absolute;
    object-fit: cover;
    border-radius: var(--radius-md);
    top: 0;
    left: 0;
    z-index: 0;
  }
  .overlay-card-image-overlay {
    /* 0.85 on homepage */
    background-image: linear-gradient(
      to bottom, 
      rgba(7, 46, 85, 0.2), 
      rgba(7, 46, 85, 1)
    ); 
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    border-radius: var(--radius-md);
    z-index: 1;
  }

  .gradient-blue::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    opacity: 0;
    border-radius: var(--radius-md);
    -moz-transition: opacity var(--transition-duration) ease-in-out;
    -o-transition: opacity var(--transition-duration) ease-in-out;
    -webkit-transition: opacity var(--transition-duration) ease-in-out;
    transition: opacity var(--transition-duration) ease-in-out;
  }
  .gradient-green::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    opacity: 0;
    border-radius: var(--radius-md);
    -moz-transition: opacity var(--transition-duration) ease-in-out;
    -o-transition: opacity var(--transition-duration) ease-in-out;
    -webkit-transition: opacity var(--transition-duration) ease-in-out;
    transition: opacity var(--transition-duration) ease-in-out;
  }
  .gradient-purple::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    opacity: 0;
    border-radius: var(--radius-md);
    -moz-transition: opacity var(--transition-duration) ease-in-out;
    -o-transition: opacity var(--transition-duration) ease-in-out;
    -webkit-transition: opacity var(--transition-duration) ease-in-out;
    transition: opacity var(--transition-duration) ease-in-out;
  }
  .gradient-orange::after {
    content: "";
    width: 100%;
    height: 100%;
    position: absolute;
    opacity: 0;
    border-radius: var(--radius-md);
    -moz-transition: opacity var(--transition-duration) ease-in-out;
    -o-transition: opacity var(--transition-duration) ease-in-out;
    -webkit-transition: opacity var(--transition-duration) ease-in-out;
    transition: opacity var(--transition-duration) ease-in-out;
  }

  .overlay-card:hover .gradient-blue::after {
    opacity: 1;
    background-image: linear-gradient(
      to bottom,
      rgba(var(--color-blue), 0.2),
      rgba(var(--color-blue), 0.4)
    )
  }

  .overlay-card:hover .gradient-green::after {
    opacity: 1;
    background-image: linear-gradient(
      to bottom,
      rgba(var(--color-green), 0.2),
      rgba(var(--color-green), 0.4)
    )
  }

  .overlay-card:hover .gradient-orange::after {
    opacity: 1;
    background-image: linear-gradient(
      to bottom,
      rgba(var(--color-orange), 0.2),
      rgba(var(--color-orange), 0.4)
    )
  }

  .overlay-card:hover .gradient-purple::after {
    opacity: 1;
    background-image: linear-gradient(
      to bottom,
      rgba(var(--color-purple), 0.2),
      rgba(var(--color-purple), 0.4)
    )
  }

  .overlay-card-body {
    display: flex;
    flex-direction: column;
    /* justify-content: space-between; */
    padding: 1rem 1rem 2rem 1rem;
    height: 100%;
    width: 100%;
    z-index: 2;
  }

  .overlay-card-body-no-icon {
    justify-content: end;
  }

  .overlay-card-icon-container {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 1rem 0;
  }

  .overlay-card-icon {
    border-radius: 100%;
    width: 120px;
    height: 120px;
    color: white;
    font-size: 48px;
    font-weight: bold;
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 2;
  }

  .overlay-card-icon-image {
    width: 60%;
    height: auto;
  }

  .overlay-card-content {
    padding: 0 1rem;
    z-index: 2;
  }

  .overlay-card-title {
    color: white;
  }

  .overlay-card-description {
    color: white;
    font-size: 1.1rem;
  }
</style>

<a 
  class:list={["overlay-card"]}
  href={props.isExternalLink ? props.path : base_url(props.path)}
  aria-label={`Link to Focus Area: ${props.name}`}
  {...(props.isExternalLink ? { "target": "_blank", "rel": "noopener noreferrer" } : {})}
>
  <Image 
    src={props.background} 
    alt={props.alt} 
    class="overlay-card-image"
  />
  <div class:list={[
      "overlay-card-image-overlay",
      { "gradient-purple": props.color === "purple" },
      { "gradient-orange": props.color === "orange" },
      { "gradient-green": props.color === "green" },
      { "gradient-blue": props.color === "blue" }
    ]}
  />
  <div class:list={["overlay-card-body", { "overlay-card-body-no-icon": !props.icon }]}>
    {props.icon && (
      <div class="overlay-card-icon-container" aria-hidden="true">
        <div
          class:list={[
            "overlay-card-icon",
            { "background-purple": props.color === "purple" },
            { "background-orange": props.color === "orange" },
            { "background-green": props.color === "green" },
            { "background-blue": props.color === "blue" }
          ]}
        >
          <Image 
            src={props.icon} 
            alt={props.name} 
            class="overlay-card-icon-image"
          />
        </div>
      </div>
    )}
    <div class="overlay-card-content">
      <h3 class="overlay-card-title">
        {props.name}
      </h3>
      <p class="overlay-card-description">
        {props.description}
      </p>
    </div>
  </div>
</a>